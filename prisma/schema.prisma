// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id          String    @id @default(cuid())
  email       String    @unique
  password    String
  name        String
  sentMessages Messages[] @relation("SentMessages")  
  receivedMessages Messages[] @relation("ReceivedMessages") 
  createdAt DateTime @default(now())
  profileUrl String?
  chats1      Chat[]  @relation("User1")
  chats2      Chat[]  @relation("User2")
}
model Messages {
  id          String   @id @default(uuid())
  content     String
  createdAt   DateTime @default(now())
  senderId    String
  receiverId  String
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])  
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id])  
} 

model Chat {
  id          String   @id @default(uuid())
  userId1 String
  userId2 String
  lastMessage String
  lastMessageCreatedAt  DateTime @default(now())
  unreadCount Json? 
  user1 User @relation(name: "User1", fields: [userId1], references: [id])
  user2 User @relation(name: "User2", fields: [userId2], references: [id])
}